Use cWebView.pkg
Use cWebPanel.pkg
Use cWebLabel.pkg
Use cWebHtmlBox.pkg
Use cWebForm.pkg
Use cLogger.pkg

Use cCredentialManagementAPI.pkg
Use cWebButton.pkg
Use cWebGroup.pkg

Object oCredentialManagementDemo is a cWebView
    Set peWebViewStyle to wvsDrillDown
    Set peViewType to vtUndefined
    Set pbShowCaption to False
    Set Verify_Save_msg to 0 // don't confirm saves
    
    Set psCaption to "Credential Management Demo"

    Set piMaxWidth to 1024
    Set piColumnCount to 12
    Set pbServerOnShow to True
    
    Object oCredentialManagement is a cCredentialManagementAPI
        Set pbServerOnCredential to True
        Set pbServerOnSuccess to True
        Set pbServerOnError to True

        // Triggered after GetCredential is called, if credentials were found/selected
        // Normally you would use this event to log in the user
        Procedure OnCredential tCredential stCredential
            If (stCredential.type = "password") Begin
                Send Log of oLogger (SFormat("Logging in user '%1' with credentials %2/%3", stCredential.name, stCredential.id, stCredential.password))
            End
            Else If (stCredential.type = "federated") Begin
                Send Log of oLogger (SFormat("Logging in user '%1' with credentials %2/%3/%4", stCredential.name, stCredential.id, stCredential.provider, stCredential.protocol))
            End
            Else Begin
                Send Log of oLogger (SFormat("Got unknown credential type '%1'", stCredential.type))
            End
        End_Procedure

        // Triggered after StorePassword, StoreFederated or PreventSilentAccess is called, if successful
        Procedure OnSuccess
            Send Log of oLogger "Success!"
        End_Procedure

        // Triggered after StorePassword, StoreFederated or PreventSilentAccess is called, if unsuccessful
        Procedure OnError String sErrorName String sErrorMessage
            Send Log of oLogger (SFormat("%1: %2", sErrorName, sErrorMessage))
        End_Procedure
    End_Object

    Object oWebMainPanel is a cWebPanel
        Set piColumnCount to 12
        WebSetResponsive piColumnCount rmMobile to 6
        
        Object oWebLabel is a cWebLabel
            Set psCaption to "Supported?"
            Set piColumnSpan to 0
        End_Object

        Object oWebHtmlBox is a cWebHtmlBox
            Set piColumnSpan to 0
            Set psHtml to '<div class="as-label"><a href="https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer#browser_compatibility" target="_blank">See browser compatibility</a></div>'
        End_Object
        
        Object oWebLabel2 is a cWebLabel
            Set psCaption to "The Credential Management API lets a website store and retrieve password, public key, and federated credentials. These capabilities allow users to sign in without typing passwords, see the federated account they used to sign in to a site, and resume a session without the explicit sign-in flow of an expired session."
            Set piColumnSpan to 0
        End_Object

        Object oWebGroup1 is a cWebGroup
            Set piColumnCount to 12   
            Set pbShowBorder to False
            Set pbShowCaption to False

            Object oWebForm1 is a cWebForm
                Set piColumnSpan to 0
                Set psLabel to "Username"
                Set psPlaceHolder to "Enter a fake username (try 'john', 'paul', 'george' or 'ringo')..."
                Set psAutoComplete to "username"
            End_Object

            Object oWebForm2 is a cWebForm
                Set piColumnSpan to 0
                Set psLabel to "Password"
                Set pbPassword to True
                Set psPlaceHolder to "... and a fake password, then click button below"
                Set psAutoComplete to "current-password"
            End_Object

            Object oWebButton1 is a cWebButton
                Set piColumnSpan to 0
                Set psCaption to "Emulate a login, storing credentials in your browser"
                Set pbShowWaitDialog to True
                Set psWaitMessage to "Pretend this is a login form, and you're logging in to the application..."
            
                Procedure OnClick
                    String sUsername sPassword sFullName
                    Sleep 3
                    WebGet psValue of oWebForm1 to sUsername
                    WebGet psValue of oWebForm2 to sPassword
                    Move sUsername to sFullName
                    If (sUsername = "john") Move "John Lennon" to sFullName
                    Else If (sUsername = "paul") Move "Paul McCartney" to sFullName
                    Else If (sUsername = "george") Move "George Harrison" to sFullName
                    Else If (sUsername = "ringo") Move "Ringo Starr" to sFullName
                    
                    // Normally there would be some authentication logic here, let's assume that went well
                    
                    Send Log of oLogger (SFormat("User '%1' logged in, attempting to store credentials in browser", sFullName))
                    
                    // Unless user has turned off credential storage for this site (or in general), this will prompt user to save credentials
                    Send StorePassword of oCredentialManagement sUsername sFullName "https://www.dataaccess.eu/favicon.ico" sPassword
                End_Procedure
            End_Object

            Object oWebButton2 is a cWebButton
                Set piColumnSpan to 0
                Set psCaption to "Get credentials from browser (mediation = required, will always ask user)"
            
                Procedure OnClick
                    tCredentialRequestOptions stOptions
                    
                    // Ask for password credentials, with required user mediation - user will have to choose credentials
                    // Will trigger OnCredential if successful
                    Move True to stOptions.password
                    Move CM_MEDIATION_REQUIRED to stOptions.mediation
                    Send Log of oLogger "Asking for credentials"
                    Send GetCredential of oCredentialManagement stOptions
                End_Procedure
            End_Object

            Object oWebButton3 is a cWebButton
                Set piColumnSpan to 0
                Set psCaption to "Get credentials from browser (mediation = optional, will only ask user if multiple credentials)"
            
                Procedure OnClick
                    tCredentialRequestOptions stOptions
    
                    // Ask for password credentials, with optional user mediation - user will only be asked if more than one set of credentials is stored, or PreventSilentAccess was called earlier
                    // Will trigger OnCredential if successful
                    // You would typically call this automatically from your login page, if you wanted auto-login
                    Move True to stOptions.password
                    Move "https://accounts.google.com" to stOptions.federated.providers[0]
                    Move CM_MEDIATION_OPTIONAL to stOptions.mediation
                    Send Log of oLogger "Asking for credentials"
                    Send GetCredential of oCredentialManagement stOptions
                End_Procedure
            End_Object

            Object oWebButton4 is a cWebButton
                Set piColumnSpan to 0
                Set psCaption to "Get credentials from browser (mediation = silent, will never ask user, only works if single credential)"
            
                Procedure OnClick
                    tCredentialRequestOptions stOptions
    
                    // Ask for password credentials, without user mediation - user will never be asked, but nothing is returned if more than one set of credentials is stored, or PreventSilentAccess was called earlier
                    // Will trigger OnCredential if successful
                    Move True to stOptions.password
                    Move CM_MEDIATION_SILENT to stOptions.mediation
                    Send Log of oLogger "Asking for credentials"
                    Send GetCredential of oCredentialManagement stOptions
                End_Procedure
            End_Object

            Object oWebButton5 is a cWebButton
                Set piColumnSpan to 0
                Set psCaption to "Prevent silent access (sets flag to disable login without mediation)"
            
                Procedure OnClick
                    Send Log of oLogger "Turning off un-mediated credential access for next request"
                    Send PreventSilentAccess of oCredentialManagement
                End_Procedure
            End_Object
        End_Object
        
        Object oLogger is a cLogger
        End_Object

    End_Object 
    
    Procedure OnShow
        Boolean bIsSupported
        
        Forward Send OnShow

        WebGet pbIsSupported of oCredentialManagement to bIsSupported
        If (bIsSupported) Begin
            WebSet psCaption of oWebLabel to "Credential Management API is supported"
            WebSet psTextColor of oWebLabel to "green"
        End
        Else Begin
            WebSet psCaption of oWebLabel to "Credential Management API is NOT supported (try anything but Internet Explorer)"
            WebSet psTextColor of oWebLabel to "red"
            WebSet pbEnabled of oWebGroup1 to False
        End
    End_Procedure

End_Object
